comandos:(outros comandos no caderno)

sudo -u postgres psql /*comando para abrir o postgres com o usuario postgres*/
psql -U nome_user -h localhost -d postgres  /*jeito mais funcional de acessar o postgres*/

/c <tabela> <usuario> /*para acessar uma tabela com um usuario em especifico (o usuario não é obrigatório)*/
/d /*lista as tabelas no bd atual*/ ou \d <tabela> /*lista os atributos da tabela*/

insert into competicao (sigla, datai, dataf, titulo) values ('cmp1', '17/09/2018', '18/09/2018', 'classico'); /*insere dados na tabela "competicao", os dados estão com '' pois são do tipo varchar e date*/

select * from competicao; /*mostra os dados na tabela "competicao"*/
select <coluna(s)/atributos> from <origem/tabela> [condição]
exemplo: select a,b,c from tabela where c='y'; /*mostra as linhas das colunas a,b,c onde existe o valor 'y' na coluna c*/

-begin; //o comandos após o begin só são efetivados após um dos comandos abaixo serem executados
-rollback; //funciona como um crtl+z quando executado cancela os comandos abaixo do begin
-commit; /*executa os comandos abaixo do begin mas se existir algum erro no codigo ele volta os dados para o estado antes da execução*/

update <nome_tabela> set <coluna>=<valor> [condição];
exemplo: update conveniado set status='super' where codcv=26 or codcv=35; /*atualiza os dados da coluna status na tabela conveniado onde o "codcv" é igual aos valores citados*/

delete from <origem/tabela> [condição];
exemplo1: delete from medico where dtcad <= '31/12/2000' and dtcad >= '01/01/2000'; /*deleta da tabela "medico" os dados que estão entre os valore citados de "dtcad"*/
exemplo2: delete from medico where cod=1234; //deleta os dados que possuem o "cod" citado na tabela "medico"

SELECT: o que eu quero ver,
FROM: onde estão os dados,
WHERE: critério da resposta;

select * from tabela order by tabela.atributo; //exibir em ordem os dados de uma tabela usando 'order by'

/------------------------------------------------------------------------------------------------

/*usando o join*/
select nomec, nomeb from cidade join bairro on cidade.sigc = bairro.sigc;
select nomec, nomeb from cidade natural join bairro;  /*os dois comandos mostram atributos(nomec, nomeb) comparando os valores(sigc) em tabelas diferentes*/

natural left join /*left usa os atributos com relação entre duas tabelas e também os que não possuem na tabela da esquerda*/
natural right join  /*é a mesma coisa do left só que para a direita*/

/-------------------------------------------------------------------------------------------------

select count(sigc) from evento; /*conta quantas linhas sigc possuem valor na tabela evento*/
select count(<atributo>) from <tabela>; 
/*para contar quantos elementos existem em uma tabela recomenda-se usar um atributo não nulo*/

select max(capac) from local;  /*mostra o maior valor de 'capac' na tabela 'local'*/
select max(<atributo>) from <tabela>;

select avg(<atributo>) from <tabela>; /*avg faz a média dos valores do 'atributo' na 'tabela'*/

select sum(<atributo>) from <tabela>; /*sum faz a soma dos 'atributos' na 'tabela'*/

/-------------------------------------------------------------------------------------------------

/*usando intersecção (intersection)*/
select s.sid, s.name from sailor s join reserve r on s.sid=r.sid join boat b on r.bid=b.bid where b.tbid=1 intersect select s.sid, s.name from sailor s join reserve r on s.sid=r.sid join boat b on r.bid=b.bid where b.tbid=2; /*retorna o nome dos velejadores que reservaram o barco tipo 1 E tipo 2, para funcionar o 'intersection' os valores retornados (aqui o s.sid e o s.sname) tem que ser os mesmos nos dois 'selects' para a função funcionar*/

/*usando o union*/
select s.sid, s.name from sailor s join reserve r on s.sid=r.sid join boat b on r.bid=b.bid where b.tbid=1 union select s.sid, s.name from sailor s join reserve r on s.sid=r.sid join boat b on r.bid=b.bid where b.tbid=2;/*retorna todos os velejadores que reservaram os barcos tipo 1 OU tipo 2 sem repetir os nomes de quem reservou os dois tipos*/

/*usando except*/


/------------------------------------------------------------------------------------------------------------------

/*usando having*/
select s.name, tpl.dsc from reserve r natural join sailor s join tplevel tpl on tpl.lid=s.sid group by 1,2 having count (*) < 10;
/*o having só é usado quando count, sum, max,avg precisam ser usados diretamente no condicional, pois são condicionais de grupo e se forem, usados com o where ocorre erro de sintaxe*/
/*caso em que o where funciona com esses comandos*/
...where horses = (select max(horses));
